name: Deploy to AWS Lambda using Serverless

on:
  push:
    branches:
      - lambda_02_jest_01_user_02

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Build (optional - for TS or bundling)
        if: exists('tsconfig.json')
        run: npm run build

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: npx serverless deploy --stage prod




# name: Deploy to AWS Lambda using Serverless

# on:
#   push:
#     branches:
#       - lambda_02_jest_01_user

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install dependencies
#         run: npm install

#       - name: Deploy with Serverless
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           MONGO_URI: ${{ secrets.MONGO_URI }}
#         run: npx serverless deploy --stage prod




# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20

#       - name: Install dependencies
#         run: npm install

#       - name: Deploy using Serverless
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         run: npx serverless deploy


# name: Deploy to AWS via Serverless

# on:
#   push:
#     branches:
#       - lambda_00  # âœ… Only trigger on this branch

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20

#       - name: Install dependencies
#         run: npm install

#       - name: Install Serverless Framework v3
#         run: npm install -g serverless@3

#       - name: Show Serverless version
#         run: sls --version

#       - name: Deploy with Serverless Framework
#         run: sls deploy --stage dev
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


